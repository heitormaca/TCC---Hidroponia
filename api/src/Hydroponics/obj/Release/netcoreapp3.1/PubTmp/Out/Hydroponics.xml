<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hydroponics</name>
    </assembly>
    <members>
        <member name="M:Hydroponics.Controllers.BancadaController.Post(Hydroponics.Models.Bancada)">
            <summary>
            Método para cadastrar uma bancada.
            </summary>
            <param name="bancada">Envia um nome, semeio, dataFim, sensorTempBancMax, sensorTempBancMin, sensorTempSolMax, sensorTempSolMin, sensorTempPhMAx, sensorTempPhMin, sensorTempEcMax, sensorTempEcMin e id_estufa.</param>
            <returns>Retorna a bancada cadastrada.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.BancadaController.GetList">
            <summary>
            Método para listar as bancadas cadastradas.
            </summary>
            <returns>Retorna a lista das estufas cadastradas ou erro 500.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.BancadaController.GetList(System.Int32)">
            <summary>
            Método para listar as bancadas cadastradas por uma estufa específica.
            </summary>
            <returns>Retorna a lista das estufas cadastradas por uma estufa específica ou erro 500.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.BancadaController.Get(System.Int32)">
            <summary>
            Método para buscar uma bancada especifica.
            </summary>
            <returns>Retorna uma bancada específica ou erro 500.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.BancadaSensoresController.Post(Hydroponics.Models.BancadaSensores)">
            <summary>
            Método para cadastrar um conjunto de dados dos sensores.
            </summary>
            <param name="bancadaSensores">Envia um sensorTempBanc, sensorTempSol, sensorPh, sensorEc e id_bancada.</param>
            <returns>Retorna a estufa cadastrada ou erro 500.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.EstufaController.Post(Hydroponics.Models.Estufa)">
            <summary>
            Método para cadastrar uma estufa.
            </summary>
            <param name="estufa">Envia um nome.</param>
            <returns>Retorna a estufa cadastrada ou erro 500.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.EstufaController.GetList">
            <summary>
            Método para listar as estufas cadastradas.
            </summary>
            <returns>Retorna a lista das estufas cadastradas ou erro 500.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.LoginController.PostLogin(Hydroponics.ViewModel.LoginViewModel)">
            <summary>
            Método para logar no sistema.
            </summary>
            <param name="login">Envia um email e uma senha.</param>
            <returns>Retorna o token de acesso.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.UsuarioController.GetUser">
            <summary>
            Método para buscar os dados do usuário logado.
            </summary>
            <returns>Retorna os dados do usuário logado ou Erro 500.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.UsuarioController.Post(Hydroponics.Models.Usuario)">
            <summary>
            Método para cadastrar um usuário no sistema.
            </summary>
            <param name="usuario">Envia um nome, email e senha.</param>
            <returns>Retorna o usuário cadastrado ou erro 500.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.UsuarioController.ChangePassword(Hydroponics.ViewModel.updatePasswordViewModel)">
            <summary>
            Método para atualizar a senha do usuário.
            </summary>
            <param name="model">Envia uma senha.</param>
            <returns>Retorna um valor vazio ou erro 500.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.UsuarioController.PutImage">
            <summary>
            Método para atualizar a imagem do usuário logado.
            </summary>
            <returns>Retorna um valor vazio ou erro 500.</returns>
        </member>
        <member name="M:Hydroponics.Controllers.UsuarioController.PostForgotPassword(Hydroponics.ViewModel.ForgotPasswordViewModel)">
            <summary>
            Método para enviar um email com uma nova senha para o usuário que à esqueceu.
            </summary>
            <param name="verificacao">Envia um email.</param>
            <returns>Retorna um valor vazio ou erro 500.</returns>
        </member>
    </members>
</doc>
